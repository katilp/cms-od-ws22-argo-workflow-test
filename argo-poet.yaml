apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: poet-test-
spec:
  entrypoint: argo-poet
  volumes:
    - name: task-pv-storage
      persistentVolumeClaim:
        claimName: nfs-2
  arguments:
    parameters:
      - name: nFiles
        value: 2
      - name: recid
        value: |
          [
            {"recid": 24119},
            {"recid": 24120},
            {"recid": 19980},
            {"recid": 19983},
            {"recid": 19985},
            {"recid": 19949},
            {"recid": 19999},
            {"recid": 19397},
            {"recid": 19407},
            {"recid": 19419},
            {"recid": 19412},
            {"recid": 20548}
          ] 
      - name: nJobs
        value: 1       
  templates:
    - name: argo-poet
      inputs:
        parameters:
          - name: nFiles
          - name: nJobs
          - name: recid
      dag:
        tasks:
          - name: prepare
            template: prepare-template

          - name: filelist
            dependencies: [prepare]
            template: filelist-template
            arguments:
              parameters:
                - name: recid
                  value: "{{item.recid}}"
            withParam: "{{inputs.parameters.recid}}"

          - name: runpoet
            dependencies: [filelist]
            template: runpoet-template
            arguments:
              parameters:
                - name: nFiles
                  value: "{{inputs.parameters.nFiles}}"
                - name: nJobs
                  value: "{{inputs.parameters.nJobs}}"
                - name: recid
                  value: "{{item.recid}}"
            withParam: "{{inputs.parameters.recid}}"                  

    # prepare the data directories needed in the workflow steps
    - name: prepare-template
      script:
        image: ubuntu:latest
        command: [bash]
        source: |
          mkdir -p /mnt/vol/data
          mkdir -p /mnt/vol/code
          chmod -R 777 /mnt/vol
        volumeMounts:
          - name: task-pv-storage
            mountPath: /mnt/vol  

    # get the full list of files 
    - name: filelist-template
      inputs:
        parameters:
          - name: recid
      script:
        image: cernopendata/cernopendata-client
        command: [bash]
        source: |
          cernopendata-client get-file-locations --recid "{{inputs.parameters.recid}}" --protocol xrootd > /mnt/vol/files_{{inputs.parameters.recid}}.txt;
        volumeMounts:
          - name: task-pv-storage
            mountPath: /mnt/vol

    # run poet for a recid and n files as input
    - name: runpoet-template
      inputs:
        parameters:
        - name: recid
        - name: nFiles
        - name: nJobs
      script:
        image: cmsopendata/cmssw_7_6_7-slc6_amd64_gcc493
        command: [bash]
        source: |
          sudo chown $USER /mnt/vol
          source /opt/cms/entrypoint.sh
          git clone -b odws2022-ttbaljets-prod https://github.com/katilp/PhysObjectExtractorTool.git
          cd PhysObjectExtractorTool/PhysObjectExtractor
          scram b
          echo "{{inputs.parameters.nFiles}}"
          echo "/mnt/vol/files_{{inputs.parameters.recid}}.txt"
          itJobs=$(( {{inputs.parameters.nJobs}} -1 ))
          firstFile=$(( {{inputs.parameters.nFiles}}*$itJobs ))
          cmsRun python/poet_cfg.py True "{{inputs.parameters.nFiles}}" 0 '"/mnt/vol/files_{{inputs.parameters.recid}}.txt"'
          mv myoutput.root /mnt/vol/output_{{inputs.parameters.recid}}.root
        volumeMounts:
        - name: task-pv-storage
          mountPath: /mnt/vol